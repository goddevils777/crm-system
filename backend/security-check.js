const fs = require('fs');
const path = require('path');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const runSecurityCheck = () => {
  console.log('\nüîí –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò CRM –°–ò–°–¢–ï–ú–´\n');
  
  const checks = [];
  
  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
  const envPath = path.join(__dirname, '.env');
  if (fs.existsSync(envPath)) {
    const envContent = fs.readFileSync(envPath, 'utf8');
    
    if (envContent.includes('JWT_SECRET=') && !envContent.includes('your_super_secret')) {
      checks.push('‚úÖ JWT_SECRET —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } else {
      checks.push('‚ùå JWT_SECRET –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ');
    }
    
    if (envContent.includes('BCRYPT_ROUNDS=12')) {
      checks.push('‚úÖ BCRYPT_ROUNDS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    } else {
      checks.push('‚ùå BCRYPT_ROUNDS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
  } else {
    checks.push('‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ –ª–æ–≥–æ–≤
  const logsDir = path.join(__dirname, 'logs');
  if (fs.existsSync(logsDir)) {
    checks.push('‚úÖ –ü–∞–ø–∫–∞ –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–∞');
  } else {
    checks.push('‚ùå –ü–∞–ø–∫–∞ –ª–æ–≥–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ middleware —Ñ–∞–π–ª–æ–≤
  const middlewareFiles = ['validation.js', 'security.js', 'logger.js'];
  middlewareFiles.forEach(file => {
    const filePath = path.join(__dirname, 'middleware', file);
    if (fs.existsSync(filePath)) {
      checks.push(`‚úÖ ${file} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
    } else {
      checks.push(`‚ùå ${file} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
    }
  });
  
  console.log(checks.join('\n'));
  console.log('\nüõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n');
};

runSecurityCheck();