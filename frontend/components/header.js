// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —à–∞–ø–∫–∏
class HeaderComponent {
    constructor() {
        this.currentUser = null;
    }

    render() {
        return `
      <header class="header">
        <div class="container">
          <div class="header-left">
            <button class="burger-btn" id="burger-btn">
              <span class="burger-line"></span>
              <span class="burger-line"></span>
              <span class="burger-line"></span>
            </button>
            <h1 class="logo">CRM System</h1>
          </div>
          <nav class="nav">
            <span id="user-info"></span>
            <button id="logout-btn" class="btn btn-secondary">–í—ã–π—Ç–∏</button>
          </nav>
        </div>
      </header>
    `;
    }

    mount(container) {
        container.innerHTML = this.render();
        this.setupEvents();
        this.updateUserInfo();
    }

  setupEvents() {
    const burgerBtn = document.getElementById('burger-btn');
    const logoutBtn = document.getElementById('logout-btn');
    const sidebar = document.querySelector('.sidebar');
    const mainContainer = document.querySelector('.main .container');

    // –î–û–ë–ê–í–ò–õ–ò: –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∞–π–¥–±–∞—Ä–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ localStorage
    let isManuallyOpened = localStorage.getItem('sidebar_manually_opened') === 'true';

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    if (window.innerWidth > 768) {
        if (isManuallyOpened) {
            sidebar?.classList.remove('hide');
            mainContainer?.classList.remove('sidebar-hidden');
        } else {
            sidebar?.classList.add('hide');
            mainContainer?.classList.add('sidebar-hidden');
        }
    }

    // –°–æ–∑–¥–∞–µ–º overlay –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
    let overlay = document.querySelector('.sidebar-overlay');
    if (!overlay) {
        overlay = document.createElement('div');
        overlay.className = 'sidebar-overlay';
        overlay.addEventListener('click', () => {
            sidebar?.classList.remove('show');
            overlay.classList.remove('show');
        });
        document.body.appendChild(overlay);
    }

    if (burgerBtn) {
        let hoverTimeout;

        const showSidebar = () => {
            if (window.innerWidth > 768 && !isManuallyOpened) {
                sidebar?.classList.remove('hide');
                mainContainer?.classList.remove('sidebar-hidden');
            }
        };

        const hideSidebar = () => {
            if (hoverTimeout) clearTimeout(hoverTimeout);
            hoverTimeout = setTimeout(() => {
                if (window.innerWidth > 768 && !isManuallyOpened) {
                    sidebar?.classList.add('hide');
                    mainContainer?.classList.add('sidebar-hidden');
                }
            }, 400);
        };

        const cancelHide = () => {
            if (hoverTimeout) clearTimeout(hoverTimeout);
        };

        // Hover –Ω–∞ –±—É—Ä–≥–µ—Ä–µ
        burgerBtn.addEventListener('mouseenter', showSidebar);
        burgerBtn.addEventListener('mouseleave', hideSidebar);

        // Hover –Ω–∞ —Å–∞–π–¥–±–∞—Ä–µ (–≤—Å—è –æ–±–ª–∞—Å—Ç—å sidebar)
        const sidebarContainer = document.getElementById('sidebar-container');
        sidebarContainer?.addEventListener('mouseenter', cancelHide);
        sidebarContainer?.addEventListener('mouseleave', hideSidebar);

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ —Å–∞–º–æ–º sidebar —ç–ª–µ–º–µ–Ω—Ç–µ
        sidebar?.addEventListener('mouseenter', cancelHide);
        sidebar?.addEventListener('mouseleave', hideSidebar);

        // –ö–ª–∏–∫ –Ω–∞ –±—É—Ä–≥–µ—Ä - –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ
        burgerBtn.addEventListener('click', () => {
            if (window.innerWidth <= 768) {
                // –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö - –ø–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —Å–∞–π–¥–±–∞—Ä
                const sidebarContainer = document.getElementById('sidebar-container');
                sidebar?.classList.toggle('show');
                sidebarContainer?.classList.toggle('show');
                overlay.classList.toggle('show');
            } else {
                // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø–µ - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                isManuallyOpened = !isManuallyOpened;
                localStorage.setItem('sidebar_manually_opened', isManuallyOpened.toString());
                
                if (isManuallyOpened) {
                    sidebar?.classList.remove('hide');
                    mainContainer?.classList.remove('sidebar-hidden');
                } else {
                    sidebar?.classList.add('hide');
                    mainContainer?.classList.add('sidebar-hidden');
                }
            }
        });
    }

    // –ù–û–í–û–ï: –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–æ–¥—É–ª—è
    sidebar?.addEventListener('click', (e) => {
        const menuItem = e.target.closest('[data-module]');
        if (menuItem && window.innerWidth <= 768) {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –º–æ–¥—É–ª—è
            setTimeout(() => {
                const sidebarContainer = document.getElementById('sidebar-container');
                sidebar.classList.remove('show');
                sidebarContainer?.classList.remove('show');
                overlay.classList.remove('show');
            }, 150);
        }
    });

    logoutBtn?.addEventListener('click', () => {
        localStorage.removeItem('authToken');
        localStorage.removeItem('userData');
        window.location.href = 'auth/login.html';
    });
}

    
    updateUserInfo() {
        const userData = JSON.parse(localStorage.getItem('userData') || '{}');
        const loginUsername = userData.loginUsername || userData.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        const role = userData.role || 'buyer';

        const roleIcons = { 'admin': 'üëë', 'manager': '‚≠ê', 'buyer': 'üòá' };
        const roleText = { 'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', 'manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä', 'buyer': '–ë–∞–π–µ—Ä' };

        document.getElementById('user-info').innerHTML = `
      <div class="user-profile">
        <span class="user-avatar">${roleIcons[role]}</span>
        <div class="user-details">
          <div class="user-name">${loginUsername}</div>
          <div class="user-role">${roleText[role] || role}</div>
        </div>
      </div>
    `;
    }
}

window.HeaderComponent = HeaderComponent;